setupBuildInfo()
{
   # Dump the stuff we want the overnight page to display to identify this build
   echo "PRODUCT=$PRODUCT" >> $LOGDIR/BUILDINFO
   echo "RUNNER=$RUNNER" >> $LOGDIR/BUILDINFO
   echo "LOG_HOST=$LOG_HOST" >> $LOGDIR/BUILDINFO
   echo "LOG_USER=$LOG_USER" >> $LOGDIR/BUILDINFO
   echo "RCP=$RCP" >> $LOGDIR/BUILDINFO
   echo "RSH=$RSH" >> $LOGDIR/BUILDINFO
   echo "REPOSITORY_URL=$REPOSITORY_URL" >> $LOGDIR/BUILDINFO
   echo "SETUP_TYPE=$SETUP_TYPE" >> $LOGDIR/BUILDINFO
   echo "BUILD_DIST=$BUILD_DIST" >> $LOGDIR/BUILDINFO
   echo "KEEP_DIST=$KEEP_DIST" >> $LOGDIR/BUILDINFO
   echo "RUN_DBT=$RUN_DBT" >> $LOGDIR/BUILDINFO
   echo "RUN_RBT=$RUN_RBT" >> $LOGDIR/BUILDINFO
   echo "RUN_EXAMPLES=$RUN_EXAMPLES" >> $LOGDIR/BUILDINFO
   echo "REV=$REV" >> $LOGDIR/BUILDINFO
   echo "VER=$VER" >> $LOGDIR/BUILDINFO
   echo "DEP=$DEP" >> $LOGDIR/BUILDINFO

   cp $LOGDIR/BUILDINFO $WORKDIR/build/etc/
}

test_configure ()
{
    grep 'Variable Setup' $1 > /dev/null 2>&1
    T_CONFIG=$?
    if [ "$T_CONFIG" = 0 ]
    then
        return 1
    fi
    return 0
}

test_build ()
{
    test_configure $*
    T_BUILD_1=$?
    test $2 = 0 -a $T_BUILD_1 != 0 
    return $?
}

test_build_dist ()
{
    grep 'No such file or directory' $1 > /dev/null 2>&1
    T_BUILD_DIST_1=$?
    grep ' ## ' $1 > /dev/null 2>&1
    T_BUILD_DIST_2=$?
    grep 'Could not load project file' $1 > /dev/null 2>&1
    T_BUILD_DIST_3=$?
    test_configure $*
    T_BUILD_DIST_4=$?

    test $2 = 0 -a $T_BUILD_DIST_1 != 0 -a $T_BUILD_DIST_2 != 0 -a $T_BUILD_DIST_3 != 0 -a $T_BUILD_DIST_4 != 0 
    return $?
}   

test_archive_dist ()
{
    test $2 = 0
    return $?
}

test_build_dbt_tests()
{
    grep -E '\*\*\*.* Error [0-9]*' $1 > /dev/null 2>&1
    T_BUILD_DBT_1=$?
    test_configure $*
    T_BUILD_DBT_2=$?

    test $2 = 0 -a $T_BUILD_DBT_1 != 0 -a $T_BUILD_DBT_2 != 0 
    return $?
}

test_perform_dbt_tests ()
{
    if [ ! -d $1 ]
    then
        return 1
    fi

    if [ ! -f $1/management_summary.txt ]
    then
        return 1
    fi

    PASS=`grep 'DBT PASS count' $1/management_summary.txt | awk -F': ' '{ print $2 }'`
    FAIL=`grep 'DBT FAIL count' $1/management_summary.txt | awk -F': ' '{ print $2 }'`    
    XPASS=`grep 'DBT XPASS count' $1/management_summary.txt | awk -F': ' '{ print $2 }'`    
    MISSING=`grep 'DBT missing testcases' $1/management_summary.txt | awk -F': ' '{ print $2 }'`
    if [ "$FAIL" = "0" -a "$XPASS" = "0" -a "$MISSING" = "0" ]
    then
        test_configure $2
        T_PERFORM_DBT_1=$?
        if [ "$3" = 0 -a "$T_PERFORM_DBT_1" != 0 ]
	then
           return 0
        else
           DBT_INFO="RUN/DBT=FAIL"
           return 1
        fi
    else
        DBT_TMP_INFO="P:${PASS}_XP:${XPASS}_F:${FAIL}_M:${MISSING}"
        DBT_INFO=`echo $DBT_TMP_INFO | tr -d ' '`
        return 1
    fi
}

test_build_rbt_tests ()
{
    test_configure $*
    T_BUILD_RBT_1=$?
    test $2 = 0 -a $T_BUILD_RBT_1 != 0 
    return $?
}

test_perform_rbt_tests ()
{
    if [ ! -d $1 ]
    then
        return 1
    fi

    TODAY_RBT=`date +'%Y%m%d'`
    if [ ! -f $1/RBTmetrics_${TODAY_RBT} ]
    then
        return 1
    fi

    PASS=`grep 'RBT PASS' $1/RBTmetrics_${TODAY_RBT} | awk -F': ' '{ print $2 }'`
    FAIL=`grep 'RBT FAIL' $1/RBTmetrics_${TODAY_RBT} | awk -F': ' '{ print $2 }'`    
    XPASS=`grep 'RBT XPASS' $1/RBTmetrics_${TODAY_RBT} | awk -F': ' '{ print $2 }'`    
    MISSING=`grep 'Crashed tests amount' $1/RBTmetrics_${TODAY_RBT} | awk -F': ' '{ print $2 }'`
    if [ "$FAIL" = "0" -a "$XPASS" = "0" -a "$MISSING" = "0" ]
    then
        test_configure $2
        T_PERFORM_RBT_1=$?
        if [ "$3" = 0 -a "$T_PERFORM_RBT_1" != 0 ]
	then
           return 0
        else
           RBT_INFO="RUN/RBT=FAIL"
           return 1
        fi
    else
        RBT_TMP_INFO="P:${PASS}_XP:${XPASS}_F:${FAIL}_M:${MISSING}"
        RBT_INFO=`echo $RBT_TMP_INFO | tr -d ' '`
        return 1
    fi
}
