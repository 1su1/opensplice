<?xml version="1.0" encoding='ISO-8859-1' standalone='no'?>
<!DOCTYPE Dlrl SYSTEM 'Dlrl.dtd'>
<!-- In our example we are using an existing topic model which contains
     topics for the ChatMessage object and User object. Because the DLRL
     itself can not determine how the object definition relates to the
     topic defintion we must provide a detailed mapping of the object onto
     the topic.
  -->
<Dlrl name='DLRL_SecureChatRoom_example'>

    <!-- we must always define a templateDef element for each multiRelation
         used within DLRL. As we need to specify the collection type (pattern)
         as well as the type of object inside the collection (itemType).
      -->
	<templateDef name="DLRLChat::UserSet" pattern="Set" itemType="DLRLChat::User"/>

    <!-- The complete mapping of the User onto the already existing
         DCPS NameService topic
     -->
	<classMapping name="DLRLChat::User">
		<mainTopic name="Chat_NameService" typename="Chat::NameService">
			<keyDescription content="NoOid">
				<keyField>userID</keyField>
			</keyDescription>
		</mainTopic>
		<monoAttribute name="id">
			<valueField>userID</valueField>
		</monoAttribute>
		<monoAttribute name="name">
			<valueField>name</valueField>
		</monoAttribute>
	</classMapping>

    <classMapping name="DLRLChat::WhiteList" implClass="WhiteListEditor::WhiteListCustomImpl" implPath="WhiteListObjects_editorCustomImpl.h">
		<mainTopic name="Chat_WhiteListTopic" typename="Chat::WhiteListTopic">
			<keyDescription content="NoOid">
				<keyField>name</keyField>
			</keyDescription>
		</mainTopic>
		<monoAttribute name="name">
			<valueField>name</valueField>
		</monoAttribute>
		<multiRelation name="friends">
			<multiPlaceTopic name="Chat_WhiteListUserSetTopic" typename="Chat::WhiteListUserSetTopic">
				<keyDescription content="NoOid">
					<keyField>name</keyField>
				</keyDescription>
			</multiPlaceTopic>
			<keyDescription content="NoOid">
				<keyField>userID</keyField>
			</keyDescription>
		</multiRelation>
    </classMapping>
</Dlrl>