/*
 *                         OpenSplice DDS
 *
 *   This software and documentation are Copyright 2006 to 2013 PrismTech
 *   Limited and its licensees. All rights reserved. See file:
 *
 *                     $OSPL_HOME/LICENSE 
 *
 *   for full copyright notice and license terms. 
 *
 */
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class DDS_ObjectRoot */

#ifndef _Included_DDS_ObjectRoot
#define _Included_DDS_ObjectRoot
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     DDS_ObjectRoot
 * Method:    jniStateHasChanged
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_DDS_ObjectRoot_jniStateHasChanged
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     DDS_ObjectRoot
 * Method:    jniChangeRelationship
 * Signature: (ILDDS/ObjectRoot;)V
 */
JNIEXPORT void JNICALL Java_DDS_ObjectRoot_jniChangeRelationship
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     DDS_ObjectRoot
 * Method:    jniChangeCollection
 * Signature: (ILDDS/StrMap;)V
 */
JNIEXPORT void JNICALL Java_DDS_ObjectRoot_jniChangeCollection__ILDDS_StrMap_2
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     DDS_ObjectRoot
 * Method:    jniChangeCollection
 * Signature: (ILDDS/IntMap;)V
 */
JNIEXPORT void JNICALL Java_DDS_ObjectRoot_jniChangeCollection__ILDDS_IntMap_2
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     DDS_ObjectRoot
 * Method:    jniChangeCollection
 * Signature: (ILDDS/Set;)V
 */
JNIEXPORT void JNICALL Java_DDS_ObjectRoot_jniChangeCollection__ILDDS_Set_2
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     DDS_ObjectRoot
 * Method:    jniOid
 * Signature: ()LDDS/DLRLOid;
 */
JNIEXPORT jobject JNICALL Java_DDS_ObjectRoot_jniOid
  (JNIEnv *, jobject);

/*
 * Class:     DDS_ObjectRoot
 * Method:    jniReadState
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_DDS_ObjectRoot_jniReadState
  (JNIEnv *, jobject);

/*
 * Class:     DDS_ObjectRoot
 * Method:    jniWriteState
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_DDS_ObjectRoot_jniWriteState
  (JNIEnv *, jobject);

/*
 * Class:     DDS_ObjectRoot
 * Method:    jniOwner
 * Signature: ()LDDS/CacheBase;
 */
JNIEXPORT jobject JNICALL Java_DDS_ObjectRoot_jniOwner
  (JNIEnv *, jobject);

/*
 * Class:     DDS_ObjectRoot
 * Method:    jniDestroy
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_DDS_ObjectRoot_jniDestroy
  (JNIEnv *, jobject);

/*
 * Class:     DDS_ObjectRoot
 * Method:    jniIsModified
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_DDS_ObjectRoot_jniIsModified
  (JNIEnv *, jobject, jint);

/*
 * Class:     DDS_ObjectRoot
 * Method:    jniGet
 * Signature: (I)LDDS/ObjectRoot;
 */
JNIEXPORT jobject JNICALL Java_DDS_ObjectRoot_jniGet
  (JNIEnv *, jobject, jint);

/*
 * Class:     DDS_ObjectRoot
 * Method:    jniObjectHome
 * Signature: ()LDDS/ObjectHome;
 */
JNIEXPORT jobject JNICALL Java_DDS_ObjectRoot_jniObjectHome
  (JNIEnv *, jobject);

JNIEXPORT jstring JNICALL Java_DDS_ObjectRoot_jniMaintopicName
  (JNIEnv *, jobject);

/*
 * Class:     DDS_ObjectRoot
 * Method:    jniDeleteObjectRoot
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_DDS_ObjectRoot_jniDeleteObjectRoot
  (JNIEnv *, jobject);

/*
 * Class:     DDS_ObjectRoot
 * Method:    jniHomeIndex
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_DDS_ObjectRoot_jniHomeIndex
  (JNIEnv *, jobject);

/*
 * Class:     DDS_ObjectRoot
 * Method:    jniGetInvalidRelations
 * Signature: ()[Ljava/lang/String
 */
JNIEXPORT jobjectArray JNICALL Java_DDS_ObjectRoot_jniGetInvalidRelations
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
