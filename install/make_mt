#
# Setup variables
#
MT=$OSPL_HOME/install/MT
#
# Copy contents of specified directory 
#
install_dir ()
{
    source=$1
    target=$2
    dir=$3
    mode=$4

    if [ -d $source ]
    then
	mkdir -p $MT/$target/$dir
	cp $source/* $MT/$target/$dir
	chmod -R $mode $MT/$target/$dir/* 2> /dev/null
    fi
}

#
# Copy specified file to the specified directory 
#
install_file ()
{
    source=$1
    target=$2
    dir=$3
    file=$4
    mode=$5

    if [ -d $source ]
    then
	mkdir -p $MT/$target/$dir
	chmod 755 $MT/$target/$dir 2> /dev/null
	if [ -f $source/$file ]
	then
	    printf "*       copy $file ... "
	    cp $source/$file $MT/$target/$dir
	    chmod $mode $MT/$target/$dir/$file 2> /dev/null
	    echo "Ready"
	else
	    echo "* ##    file $file not found"
	fi
	chmod 555 $MT/$target/$dir 2> /dev/null
    fi
}

#
# Copy specified file to the specified directory
#
install_bin_file ()
{
    source=$1
    target=$2
    dir=$3
    file=$4
    mode=$5
    target_os=`expr "$target" : '[a-zA-Z0-9]*\.\([a-zA-Z]*\)'`

    if [ -d $source ]
    then
	mkdir -p $MT/$target/$dir
	chmod 755 $MT/$target/$dir 2> /dev/null
	if [ -f $source/$file ]
	then
	    printf "*       copy $file ... "
	    cp $source/$file $MT/$target/$dir
	    chmod $mode $MT/$target/$dir/$file 2> /dev/null
	    echo "Ready"
	else
	    echo "* ##    file $file not found"
	fi
	chmod 555 $MT/$target/$dir 2> /dev/null
    fi
}

install_target ()
{
    target=$1
    target_os=`expr "$target" : '[a-zA-Z0-9]*\.\([a-zA-Z]*\)'`

    echo "*   Prepare MT for target $target"

    mkdir $MT/$target

    #
    # Copy execuatble files
    #
    echo "*     Copy executable files"
    release=`ls -d $OSPL_HOME/exec/$target-release 2>/dev/null`
    if [ -z "$release" ]
    then
        echo "* ##    -release target not found checking -$target_build"
        release=`ls -d $OSPL_HOME/exec/$target-$target_build 2>/dev/null`
    fi
    if [ -n "$release" ]
    then
        mkdir -p $MT/$target/bin
        install_bin_file $release $target bin sddslm 555
        chmod 755 $MT/$target/bin 2> /dev/null
    else
        echo "* ##    No executable files detected"
    fi
    echo "*     executable files Ready"

    md5sum --help 2> /dev/null > /dev/null
    md5=$?
    if [ $md5 -eq 0 ]
    then
        echo "*     Computing MD5 checksums (take a break)"
      cwd=`pwd`
      cd $MT/$target
      find . -type f -exec md5sum {} \; | tee /tmp/$$md5.sum
      cp /tmp/$$md5.sum $MT/$target/md5.sum
      rm -f /tmp/$$md5.sum
      echo "*     Computing MD5 checksums Ready"
      cd $cwd
    else
      echo "* ##  Cannot compute MD5 checksums"
    fi

    chmod 555 $MT/$target 2> /dev/null

    printf "*     Prepare package ... "
    wd=`pwd`
    cd $MT
    tar cf OpenSplice_MT_${target}.tar $target
    cd $wd
    echo "Ready"

    echo "*   MT prepared for target $target Ready"
}

echo "* Build SPLICE MT"

target_list=`IFS="-"; set $SPLICE_TARGET; echo $1`
target_build=`IFS="-"; set $SPLICE_TARGET; echo $2`

#
# Prepare MT master directory
#
printf "*   Prepare MT master directory ... "
mkdir -p $MT; echo "Ready"

for target in $target_list
do
    #
    # Remove old MT first
    #
    if [ -d $MT/$target ]
    then
        printf "*   Remove old MT/$target directory ... "
        chmod -R 777 $MT/$target 2> /dev/null
	rm -rf $MT/OpenSplice_MT_${target}.tar
        rm -rf $MT/$target; echo "Ready"
    fi
    install_target $target
done

echo "* SPLICE MT Ready"
